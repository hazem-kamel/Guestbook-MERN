{"ast":null,"code":"var _jsxFileName = \"/Users/hazem/Desktop/Web-Development/GuestBook/frontend/src/components/Chats/Chats.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport Axios from \"axios\";\nimport io from \"socket.io-client\";\nimport \"./Chats.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPaperPlane } from \"@fortawesome/fontawesome-free-solid\";\nlet socket;\n\nconst Chat = props => {\n  const [message, setMessage] = useState(\"\");\n  const [friends, setFriends] = useState([]);\n  const [conversation, setConversation] = useState([]);\n  let friend = props.match.params.friend;\n  let storedSession = sessionStorage.getItem(\"storedSession\");\n  let user = storedSession;\n  useEffect(() => {\n    Axios.get(\"/friends\", {\n      username: user\n    }).then(res => {\n      setFriends(res.data);\n    }).catch(e => {\n      console.log(\"Cant fetch friends \", e);\n    });\n    Axios.post(\"/chat\", {\n      username: user,\n      friend: friend\n    }).then(res => {\n      setConversation(res.data);\n    }).catch(e => {\n      console.log(\"Cant fetch Chat \", e);\n    });\n  }, []);\n  console.log(conversation);\n\n  const sendMessage = messageData => {\n    Axios.post(\"/messages\", {\n      username: messageData.user,\n      friend: messageData.friend,\n      message: messageData.message\n    }, {\n      withCredentials: true,\n      crossdomain: true\n    }).then(res => {\n      console.log(\"Response\", res);\n    }).catch(e => {\n      console.log(\"Cant Register \", e);\n    });\n    console.log(messageData);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chats-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"friends-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, friends.map((friend, key) => {\n    if (friend) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: key,\n        className: \"box\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"friendAvatar\",\n        src: \"https://www.pngitem.com/pimgs/m/78-786293_1240-x-1240-0-avatar-profile-icon-png.png\",\n        alt: \"Avatar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"friendName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 19\n        }\n      }, friend)));\n    } else {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 20\n        }\n      }, \"You have no friends\");\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-window\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"https://www.pngitem.com/pimgs/m/78-786293_1240-x-1240-0-avatar-profile-icon-png.png\",\n    alt: \"avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"friend-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, friend)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-history\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"chat-ul-history\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, conversation.map((message, key) => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: \"message-list\",\n      key: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, message.sender === user ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message-data align-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"message-data-time\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }\n    }, message.dateCreated), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"message-data-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }\n    }, message.sender)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message other-message float-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 23\n      }\n    }, message.message)) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"message-data-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-circle online\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 27\n      }\n    }), \" \", message.sender), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"message-data-time\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }\n    }, message.dateCreated.toUTCString())), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message my-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 23\n      }\n    }, message.message)));\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"send-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"message-to-send\",\n    id: \"message-to-send\",\n    placeholder: \"Type your message\",\n    rows: \"3\",\n    onChange: e => {\n      setMessage(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    onClick: () => sendMessage({\n      user,\n      friend,\n      message\n    }),\n    className: \"send-button\",\n    icon: faPaperPlane,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }))));\n};\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat); //    socket.emit(\"Message\", {\n//message: \"hello\",\n//username: user,\n//friend: friend,\n//});\n//  socket.emit(\"Conversation\", { user, friend }, () => {});\n//console.log(socket);","map":{"version":3,"sources":["/Users/hazem/Desktop/Web-Development/GuestBook/frontend/src/components/Chats/Chats.js"],"names":["React","useState","useEffect","connect","Axios","io","FontAwesomeIcon","faPaperPlane","socket","Chat","props","message","setMessage","friends","setFriends","conversation","setConversation","friend","match","params","storedSession","sessionStorage","getItem","user","get","username","then","res","data","catch","e","console","log","post","sendMessage","messageData","withCredentials","crossdomain","map","key","sender","dateCreated","toUTCString","target","value","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport Axios from \"axios\";\nimport io from \"socket.io-client\";\nimport \"./Chats.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPaperPlane } from \"@fortawesome/fontawesome-free-solid\";\nlet socket;\nconst Chat = (props) => {\n  const [message, setMessage] = useState(\"\");\n  const [friends, setFriends] = useState([]);\n  const [conversation, setConversation] = useState([]);\n\n  let friend = props.match.params.friend;\n  let storedSession = sessionStorage.getItem(\"storedSession\");\n  let user = storedSession;\n  useEffect(() => {\n    Axios.get(\"/friends\", {\n      username: user,\n    })\n      .then((res) => {\n        setFriends(res.data);\n      })\n      .catch((e) => {\n        console.log(\"Cant fetch friends \", e);\n      });\n    Axios.post(\"/chat\", {\n      username: user,\n      friend: friend,\n    })\n      .then((res) => {\n        setConversation(res.data);\n      })\n      .catch((e) => {\n        console.log(\"Cant fetch Chat \", e);\n      });\n  }, []);\n\n  console.log(conversation);\n\n  const sendMessage = (messageData) => {\n    Axios.post(\n      \"/messages\",\n      {\n        username: messageData.user,\n        friend: messageData.friend,\n        message: messageData.message,\n      },\n      {\n        withCredentials: true,\n        crossdomain: true,\n      }\n    )\n      .then((res) => {\n        console.log(\"Response\", res);\n      })\n      .catch((e) => {\n        console.log(\"Cant Register \", e);\n      });\n    console.log(messageData);\n  };\n  return (\n    <div className=\"chats-container\">\n      <div className=\"friends-list\">\n        {friends.map((friend, key) => {\n          if (friend) {\n            return (\n              <div id={key} className=\"box\">\n                <img\n                  className=\"friendAvatar\"\n                  src=\"https://www.pngitem.com/pimgs/m/78-786293_1240-x-1240-0-avatar-profile-icon-png.png\"\n                  alt=\"Avatar\"\n                ></img>\n                <div className=\"text\">\n                  <p className=\"friendName\">{friend}</p>\n                </div>\n              </div>\n            );\n          } else {\n            return <p key={key}>You have no friends</p>;\n          }\n        })}\n      </div>\n\n      <div className=\"chat-window\">\n        <div className=\"chat-header\">\n          <img\n            src=\"https://www.pngitem.com/pimgs/m/78-786293_1240-x-1240-0-avatar-profile-icon-png.png\"\n            alt=\"avatar\"\n          />\n          <div className=\"friend-name\">{friend}</div>\n        </div>\n\n        <div className=\"chat-history\">\n          <ul className=\"chat-ul-history\">\n            {conversation.map((message, key) => {\n              return (\n                <li className=\"message-list\" key={key}>\n                  {message.sender === user ? (\n                    <>\n                      <div className=\"message-data align-right\">\n                        <span className=\"message-data-time\">\n                          {message.dateCreated}\n                        </span>\n                        <span className=\"message-data-name\">\n                          {message.sender}\n                        </span>\n                      </div>\n                      <div className=\"message other-message float-right\">\n                        {message.message}\n                      </div>\n                    </>\n                  ) : (\n                    <>\n                      <div className=\"message-data\">\n                        <span className=\"message-data-name\">\n                          <i className=\"fa fa-circle online\"></i>{\" \"}\n                          {message.sender}\n                        </span>\n                        <span className=\"message-data-time\">\n                          {message.dateCreated.toUTCString()}\n                        </span>\n                      </div>\n                      <div className=\"message my-message\">\n                        {message.message}\n                      </div>\n                    </>\n                  )}\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n\n        <div className=\"send-message\">\n          <textarea\n            className=\"message-to-send\"\n            id=\"message-to-send\"\n            placeholder=\"Type your message\"\n            rows=\"3\"\n            onChange={(e) => {\n              setMessage(e.target.value);\n            }}\n          ></textarea>\n          <FontAwesomeIcon\n            onClick={() => sendMessage({ user, friend, message })}\n            className=\"send-button\"\n            icon={faPaperPlane}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\nconst mapStateToProps = (state) => ({});\nconst mapDispatchToProps = (dispatch) => ({});\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);\n\n//    socket.emit(\"Message\", {\n//message: \"hello\",\n//username: user,\n//friend: friend,\n//});\n\n//  socket.emit(\"Conversation\", { user, friend }, () => {});\n//console.log(socket);\n"]},"metadata":{},"sourceType":"module"}