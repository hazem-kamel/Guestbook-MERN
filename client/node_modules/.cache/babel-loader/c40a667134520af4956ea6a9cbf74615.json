{"ast":null,"code":"var _jsxFileName = \"/Users/hazem/Desktop/Web-Development/GuestBook/frontend/src/components/Register/Register.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { RegisterAction } from \"../../Redux/Actions\";\nimport { useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport \"./Register.css\";\nimport { useAlert } from \"react-alert\";\n\nconst SignUp = props => {\n  const alert = useAlert();\n  let history = useHistory();\n  const {\n    handleSubmit,\n    register,\n    errors\n  } = useForm();\n\n  const onSubmit = data => {\n    const userData = {\n      username: data.username.toUpperCase(),\n      password: data.password,\n      gender: data.gender\n    };\n    props.register(userData);\n    setTimeout(2000, Redirect());\n  };\n\n  const Redirect = () => {\n    if (props.session.user) {\n      console.log(props.session.user);\n      sessionStorage.setItem(\"storedSession\", props.session.user.username);\n      history.push(\"/dashboard\");\n    } else {\n      alert.show( /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          size: \"30px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 18\n        }\n      }, props.session.error));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"register-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"Register\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"username\",\n    name: \"username\",\n    placeholder: \"Type your username\",\n    ref: register({\n      required: true,\n      minLength: 3,\n      maxLength: 10\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }), errors.username && errors.username.type === \"required\" && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error-before-submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"This is required\"), errors.username && errors.username.type === \"minLength\" && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error-before-submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"Minimum length is 3\"), errors.username && errors.username.type === \"maxLength\" && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error-before-submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \"Maximum length is 10\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"password\",\n    name: \"password\",\n    placeholder: \"Type your password\",\n    type: \"password\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }), errors.password && errors.password.type === \"required\" && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error-before-submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"This is required\"), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"label-gender\",\n    htmlFor: \"gender\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \"Gender\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"gender\",\n    ref: register({\n      required: true\n    }),\n    list: \"list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }), errors.gender && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error-before-submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, \"This is required\"), /*#__PURE__*/React.createElement(\"datalist\", {\n    id: \"list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Male\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Female\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/login\",\n    className: \"login-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, \"Already have an account\"))));\n};\n\nconst mapStateToProps = state => ({\n  session: state.Session\n});\n\nconst mapDispatchToProps = dispatch => ({\n  register: userData => dispatch(RegisterAction(userData))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/hazem/Desktop/Web-Development/GuestBook/frontend/src/components/Register/Register.js"],"names":["React","connect","RegisterAction","useHistory","useForm","useAlert","SignUp","props","alert","history","handleSubmit","register","errors","onSubmit","data","userData","username","toUpperCase","password","gender","setTimeout","Redirect","session","user","console","log","sessionStorage","setItem","push","show","size","error","required","minLength","maxLength","type","mapStateToProps","state","Session","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { RegisterAction } from \"../../Redux/Actions\";\nimport { useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport \"./Register.css\";\nimport { useAlert } from \"react-alert\";\n\nconst SignUp = (props) => {\n  const alert = useAlert();\n\n  let history = useHistory();\n  const { handleSubmit, register, errors } = useForm();\n  const onSubmit = (data) => {\n    const userData = {\n      username: data.username.toUpperCase(),\n      password: data.password,\n      gender: data.gender,\n    };\n    props.register(userData);\n    setTimeout(2000, Redirect());\n  };\n  const Redirect = () => {\n    if (props.session.user) {\n      console.log(props.session.user);\n      sessionStorage.setItem(\"storedSession\", props.session.user.username);\n      history.push(\"/dashboard\");\n    } else {\n      alert.show(<div style={{ size: \"30px\" }}>{props.session.error}</div>);\n    }\n  };\n  return (\n    <div className=\"register\">\n      <div className=\"register-form\">\n        <h3 className=\"title\">Register</h3>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <input\n            id=\"username\"\n            name=\"username\"\n            placeholder=\"Type your username\"\n            ref={register({ required: true, minLength: 3, maxLength: 10 })}\n          />\n          {errors.username && errors.username.type === \"required\" && (\n            <p className=\"error-before-submit\">This is required</p>\n          )}\n          {errors.username && errors.username.type === \"minLength\" && (\n            <p className=\"error-before-submit\">Minimum length is 3</p>\n          )}\n          {errors.username && errors.username.type === \"maxLength\" && (\n            <p className=\"error-before-submit\">Maximum length is 10</p>\n          )}\n          <input\n            id=\"password\"\n            name=\"password\"\n            placeholder=\"Type your password\"\n            type=\"password\"\n            ref={register({ required: true })}\n          />\n          {errors.password && errors.password.type === \"required\" && (\n            <p className=\"error-before-submit\">This is required</p>\n          )}\n\n          <label className=\"label-gender\" htmlFor=\"gender\">\n            Gender\n          </label>\n          <input name=\"gender\" ref={register({ required: true })} list=\"list\" />\n          {errors.gender && (\n            <p className=\"error-before-submit\">This is required</p>\n          )}\n          <datalist id=\"list\">\n            <option value=\"Male\" />\n            <option value=\"Female\" />\n          </datalist>\n          <input\n            type=\"submit\"\n            className=\"btn\"\n            ref={register({ required: true })}\n          />\n          <a href=\"/login\" className=\"login-link\">\n            Already have an account\n          </a>\n        </form>\n      </div>\n    </div>\n  );\n};\nconst mapStateToProps = (state) => ({\n  session: state.Session,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  register: (userData) => dispatch(RegisterAction(userData)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n"]},"metadata":{},"sourceType":"module"}