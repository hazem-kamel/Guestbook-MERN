{"ast":null,"code":"var _jsxFileName = \"/Users/hazem/Desktop/Web-Development/GuestBook/frontend/src/components/Dashboard/Dashboard.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport Axios from \"axios\";\nimport \"./Dashboard.css\";\n\nconst Dashboard = props => {\n  const [friend, setFriend] = useState(\"\");\n  const [friends, setFriends] = useState([]);\n  let storedSession = sessionStorage.getItem(\"storedSession\");\n  let user = storedSession;\n  useEffect(() => {\n    Axios.get(\"/friends\", {\n      username: user\n    }).then(res => {\n      setFriends(res.data);\n    }).catch(e => {\n      console.log(\"Cant fetch friends \", e);\n    });\n  });\n\n  const checkUser = user => {\n    Axios.post(\"/api/check\", {\n      username: user.toUpperCase()\n    }, {\n      withCredentials: true,\n      crossdomain: true\n    }).then(user => {\n      if (user.data.error) {\n        alert(user.data.error);\n      } else {\n        {\n          props.history.push(`/Chat/${user.data}`);\n        }\n        console.log(user.data);\n      }\n    }).catch(e => {\n      console.log(e);\n    });\n    console.log(user);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"logout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"Sign Out\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"friends-dashboard-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, friends !== \"No Friends\" ? friends.map((friend, key) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: key,\n      className: \"dashboard-friend-box \",\n      onClick: e => {\n        props.history.push(`/Chat/${friend}`);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"friendAvatar\",\n      src: \"https://www.pngitem.com/pimgs/m/78-786293_1240-x-1240-0-avatar-profile-icon-png.png\",\n      alt: \"Avatar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dashboard-friendName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"friendName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 19\n      }\n    }, friend)));\n  }) : /*#__PURE__*/React.createElement(\"p\", {\n    className: \"noFriends\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, \"You have no friends\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-friend-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"friendAvatar\",\n    src: \"https://www.pngitem.com/pimgs/m/78-786293_1240-x-1240-0-avatar-profile-icon-png.png\",\n    alt: \"Avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"dashboard-friendName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, \"friends\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"welcome-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, \"Live Chat Now With Your Friends\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, \"Welcome \", storedSession)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"new-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"friend-name\",\n    onChange: event => setFriend(event.target.value),\n    type: \"text\",\n    placeholder: \"type your friend's username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"chat-button\",\n    onClick: e => {\n      checkUser(friend);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, \"Chat\")));\n};\n\nconst mapStateToProps = state => ({\n  user: state.Session\n});\n\nexport default connect(mapStateToProps)(Dashboard);","map":{"version":3,"sources":["/Users/hazem/Desktop/Web-Development/GuestBook/frontend/src/components/Dashboard/Dashboard.js"],"names":["React","useState","useEffect","connect","Axios","Dashboard","props","friend","setFriend","friends","setFriends","storedSession","sessionStorage","getItem","user","get","username","then","res","data","catch","e","console","log","checkUser","post","toUpperCase","withCredentials","crossdomain","error","alert","history","push","map","key","event","target","value","mapStateToProps","state","Session"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport Axios from \"axios\";\nimport \"./Dashboard.css\";\n\nconst Dashboard = (props) => {\n  const [friend, setFriend] = useState(\"\");\n  const [friends, setFriends] = useState([]);\n\n  let storedSession = sessionStorage.getItem(\"storedSession\");\n  let user = storedSession;\n\n  useEffect(() => {\n    Axios.get(\"/friends\", {\n      username: user,\n    })\n      .then((res) => {\n        setFriends(res.data);\n      })\n      .catch((e) => {\n        console.log(\"Cant fetch friends \", e);\n      });\n  });\n  const checkUser = (user) => {\n    Axios.post(\n      \"/api/check\",\n      {\n        username: user.toUpperCase(),\n      },\n      {\n        withCredentials: true,\n        crossdomain: true,\n      }\n    )\n      .then((user) => {\n        if (user.data.error) {\n          alert(user.data.error);\n        } else {\n          {\n            props.history.push(`/Chat/${user.data}`);\n          }\n          console.log(user.data);\n        }\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n\n    console.log(user);\n  };\n  return (\n    <div>\n      <div className=\"logout\">\n        <h4>Sign Out</h4>\n      </div>\n      <div className=\"friends-dashboard-container\">\n        {friends !== \"No Friends\" ? (\n          friends.map((friend, key) => {\n            return (\n              <div\n                id={key}\n                className=\"dashboard-friend-box \"\n                onClick={(e) => {\n                  props.history.push(`/Chat/${friend}`);\n                }}\n              >\n                <img\n                  className=\"friendAvatar\"\n                  src=\"https://www.pngitem.com/pimgs/m/78-786293_1240-x-1240-0-avatar-profile-icon-png.png\"\n                  alt=\"Avatar\"\n                ></img>\n                <div className=\"dashboard-friendName\">\n                  <p className=\"friendName\">{friend}</p>\n                </div>\n              </div>\n            );\n          })\n        ) : (\n          <p className=\"noFriends\">You have no friends</p>\n        )}\n        <div className=\"dashboard-friend-box\">\n          <img\n            className=\"friendAvatar\"\n            src=\"https://www.pngitem.com/pimgs/m/78-786293_1240-x-1240-0-avatar-profile-icon-png.png\"\n            alt=\"Avatar\"\n          ></img>\n          <div className=\"dashboard-text\">\n            <p className=\"dashboard-friendName\">friends</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"welcome-message\">\n        <h3>Live Chat Now With Your Friends</h3>\n        <h3>Welcome {storedSession}</h3>\n      </div>\n      <div className=\"new-user\">\n        <input\n          className=\"friend-name\"\n          onChange={(event) => setFriend(event.target.value)}\n          type=\"text\"\n          placeholder=\"type your friend's username\"\n        ></input>\n\n        <button\n          className=\"chat-button\"\n          onClick={(e) => {\n            checkUser(friend);\n          }}\n        >\n          Chat\n        </button>\n      </div>\n    </div>\n  );\n};\nconst mapStateToProps = (state) => ({\n  user: state.Session,\n});\n\nexport default connect(mapStateToProps)(Dashboard);\n"]},"metadata":{},"sourceType":"module"}