{"ast":null,"code":"var _jsxFileName = \"/Users/hazem/Desktop/Web-Development/GuestBook/frontend/src/components/Chats/Chats.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport Axios from \"axios\";\nimport io from \"socket.io-client\";\nimport \"./Chats.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPaperPlane } from \"@fortawesome/fontawesome-free-solid\";\nlet socket = io();\n\nconst Chat = props => {\n  const [message, setMessage] = useState(\"\");\n  const [friends, setFriends] = useState([]);\n  const [conversation, setConversation] = useState([]);\n  let friend = props.match.params.friend;\n  let storedSession = sessionStorage.getItem(\"storedSession\");\n  let user = storedSession;\n\n  function logout() {\n    sessionStorage.clear();\n  }\n\n  if (!storedSession) {\n    props.history.push(\"/login\");\n  }\n\n  useEffect(() => {\n    Axios.get(\"/friends\", {\n      username: user\n    }).then(res => {\n      setFriends(res.data);\n    }).catch(e => {\n      console.log(\"Cant fetch friends \", e);\n    });\n    Axios.post(\"/chat\", {\n      username: user,\n      friend: friend\n    }).then(res => {\n      setConversation(res.data);\n    }).catch(e => {\n      console.log(\"Cant fetch Chat \", e);\n    });\n  }, [props.history.location.pathname]);\n\n  const sendMessage = messageData => {\n    Axios.post(\"/messages\", {\n      username: messageData.user,\n      friend: messageData.friend,\n      message: messageData.message\n    }, {\n      withCredentials: true,\n      crossdomain: true\n    }).then(res => {\n      console.log(\"Response\", res);\n    }).catch(e => {\n      console.log(\"Cant Register \", e);\n    });\n    console.log(messageData);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"logout\",\n    onClick: e => {\n      logout();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, \"Sign Out\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chats-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"friends-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, friends !== \"No Friends\" ? friends.map((friend, key) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: key,\n      className: \"box\",\n      onClick: e => {\n        props.history.push(`/Chat/${friend}`);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"friendAvatar\",\n      src: \"https://www.pngitem.com/pimgs/m/78-786293_1240-x-1240-0-avatar-profile-icon-png.png\",\n      alt: \"Avatar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"friendName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }, friend)));\n  }) : /*#__PURE__*/React.createElement(\"p\", {\n    className: \"noFriends\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, \"You have no friends\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-window\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"https://www.pngitem.com/pimgs/m/78-786293_1240-x-1240-0-avatar-profile-icon-png.png\",\n    alt: \"avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"friend-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, friend)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-history\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"chat-ul-history\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, conversation.map((message, key) => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: \"message-list\",\n      key: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 19\n      }\n    }, message.sender === user ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message-data align-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"message-data-time\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 27\n      }\n    }, message.dateCreated), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"message-data-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 27\n      }\n    }, message.sender)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message other-message float-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 25\n      }\n    }, message.message)) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"message-data-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-circle online\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 29\n      }\n    }), message.sender), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"message-data-time\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 27\n      }\n    }, message.dateCreated)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message my-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 25\n      }\n    }, message.message)));\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"send-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"message-to-send\",\n    id: \"message-to-send\",\n    placeholder: \"Type your message\",\n    rows: \"3\",\n    onChange: e => {\n      setMessage(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    onClick: () => sendMessage({\n      user,\n      friend,\n      message\n    }),\n    className: \"send-button\",\n    icon: faPaperPlane,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  })))));\n};\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);","map":{"version":3,"sources":["/Users/hazem/Desktop/Web-Development/GuestBook/frontend/src/components/Chats/Chats.js"],"names":["React","useState","useEffect","connect","Axios","io","FontAwesomeIcon","faPaperPlane","socket","Chat","props","message","setMessage","friends","setFriends","conversation","setConversation","friend","match","params","storedSession","sessionStorage","getItem","user","logout","clear","history","push","get","username","then","res","data","catch","e","console","log","post","location","pathname","sendMessage","messageData","withCredentials","crossdomain","map","key","sender","dateCreated","target","value","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport Axios from \"axios\";\nimport io from \"socket.io-client\";\nimport \"./Chats.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPaperPlane } from \"@fortawesome/fontawesome-free-solid\";\n\nlet socket = io();\n\nconst Chat = (props) => {\n  const [message, setMessage] = useState(\"\");\n  const [friends, setFriends] = useState([]);\n  const [conversation, setConversation] = useState([]);\n\n  let friend = props.match.params.friend;\n  let storedSession = sessionStorage.getItem(\"storedSession\");\n  let user = storedSession;\n  function logout() {\n    sessionStorage.clear();\n  }\n  if (!storedSession) {\n    props.history.push(\"/login\");\n  }\n  useEffect(() => {\n    Axios.get(\"/friends\", {\n      username: user,\n    })\n      .then((res) => {\n        setFriends(res.data);\n      })\n      .catch((e) => {\n        console.log(\"Cant fetch friends \", e);\n      });\n    Axios.post(\"/chat\", {\n      username: user,\n      friend: friend,\n    })\n      .then((res) => {\n        setConversation(res.data);\n      })\n      .catch((e) => {\n        console.log(\"Cant fetch Chat \", e);\n      });\n  }, [props.history.location.pathname]);\n  const sendMessage = (messageData) => {\n    Axios.post(\n      \"/messages\",\n      {\n        username: messageData.user,\n        friend: messageData.friend,\n        message: messageData.message,\n      },\n      {\n        withCredentials: true,\n        crossdomain: true,\n      }\n    )\n      .then((res) => {\n        console.log(\"Response\", res);\n      })\n      .catch((e) => {\n        console.log(\"Cant Register \", e);\n      });\n    console.log(messageData);\n  };\n  return (\n    <div>\n      <div>\n        <div\n          className=\"logout\"\n          onClick={(e) => {\n            logout();\n          }}\n        >\n          <h4>Sign Out</h4>\n        </div>\n      </div>\n      <div className=\"chats-container\">\n        <div className=\"friends-list\">\n          {friends !== \"No Friends\" ? (\n            friends.map((friend, key) => {\n              return (\n                <div\n                  id={key}\n                  className=\"box\"\n                  onClick={(e) => {\n                    props.history.push(`/Chat/${friend}`);\n                  }}\n                >\n                  <img\n                    className=\"friendAvatar\"\n                    src=\"https://www.pngitem.com/pimgs/m/78-786293_1240-x-1240-0-avatar-profile-icon-png.png\"\n                    alt=\"Avatar\"\n                  ></img>\n                  <div className=\"text\">\n                    <p className=\"friendName\">{friend}</p>\n                  </div>\n                </div>\n              );\n            })\n          ) : (\n            <p className=\"noFriends\">You have no friends</p>\n          )}\n        </div>\n\n        <div className=\"chat-window\">\n          <div className=\"chat-header\">\n            <img\n              src=\"https://www.pngitem.com/pimgs/m/78-786293_1240-x-1240-0-avatar-profile-icon-png.png\"\n              alt=\"avatar\"\n            />\n            <div className=\"friend-name\">{friend}</div>\n          </div>\n\n          <div className=\"chat-history\">\n            <ul className=\"chat-ul-history\">\n              {conversation.map((message, key) => {\n                return (\n                  <li className=\"message-list\" key={key}>\n                    {message.sender === user ? (\n                      <>\n                        <div className=\"message-data align-right\">\n                          <span className=\"message-data-time\">\n                            {message.dateCreated}\n                          </span>\n                          <span className=\"message-data-name\">\n                            {message.sender}\n                          </span>\n                        </div>\n                        <div className=\"message other-message float-right\">\n                          {message.message}\n                        </div>\n                      </>\n                    ) : (\n                      <>\n                        <div className=\"message-data\">\n                          <span className=\"message-data-name\">\n                            <i className=\"fa fa-circle online\"></i>\n                            {message.sender}\n                          </span>\n                          <span className=\"message-data-time\">\n                            {message.dateCreated}\n                          </span>\n                        </div>\n                        <div className=\"message my-message\">\n                          {message.message}\n                        </div>\n                      </>\n                    )}\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n\n          <div className=\"send-message\">\n            <textarea\n              className=\"message-to-send\"\n              id=\"message-to-send\"\n              placeholder=\"Type your message\"\n              rows=\"3\"\n              onChange={(e) => {\n                setMessage(e.target.value);\n              }}\n            ></textarea>\n            <FontAwesomeIcon\n              onClick={() => sendMessage({ user, friend, message })}\n              className=\"send-button\"\n              icon={faPaperPlane}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nconst mapStateToProps = (state) => ({});\nconst mapDispatchToProps = (dispatch) => ({});\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);\n"]},"metadata":{},"sourceType":"module"}