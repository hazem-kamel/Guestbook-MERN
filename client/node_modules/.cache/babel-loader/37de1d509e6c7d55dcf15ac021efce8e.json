{"ast":null,"code":"var _jsxFileName = \"/Users/hazem/Desktop/Web-Development/GuestBook/frontend/src/components/Register/Register.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { RegisterAction } from \"../../Redux/Actions\";\nimport { useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport \"./Register.css\";\nimport { useAlert } from \"react-alert\";\n\nconst SignUp = props => {\n  const alert = useAlert();\n  let history = useHistory();\n  const {\n    handleSubmit,\n    register,\n    errors\n  } = useForm();\n\n  const onSubmit = data => {\n    const userData = {\n      username: data.username.toUpperCase(),\n      password: data.password,\n      gender: data.gender\n    };\n    props.register(userData);\n    setTimeout(Redirect(), 5000);\n  };\n\n  function Redirect() {\n    console.log(\"hi\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"register-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \"Register\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"username\",\n    name: \"username\",\n    placeholder: \"Type your username\",\n    ref: register({\n      required: true,\n      minLength: 3,\n      maxLength: 10\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }), errors.username && errors.username.type === \"required\" && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error-before-submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"This is required\"), errors.username && errors.username.type === \"minLength\" && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error-before-submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \"Minimum length is 3\"), errors.username && errors.username.type === \"maxLength\" && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error-before-submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"Maximum length is 10\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"password\",\n    name: \"password\",\n    placeholder: \"Type your password\",\n    type: \"password\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }), errors.password && errors.password.type === \"required\" && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error-before-submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"This is required\"), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"label-gender\",\n    htmlFor: \"gender\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"Gender\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"gender\",\n    ref: register({\n      required: true\n    }),\n    list: \"list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }), errors.gender && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error-before-submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, \"This is required\"), /*#__PURE__*/React.createElement(\"datalist\", {\n    id: \"list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Male\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Female\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/login\",\n    className: \"login-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, \"Already have an account\"))));\n};\n\nconst mapStateToProps = state => ({\n  session: state.Session\n});\n\nconst mapDispatchToProps = dispatch => ({\n  register: userData => dispatch(RegisterAction(userData))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/hazem/Desktop/Web-Development/GuestBook/frontend/src/components/Register/Register.js"],"names":["React","connect","RegisterAction","useHistory","useForm","useAlert","SignUp","props","alert","history","handleSubmit","register","errors","onSubmit","data","userData","username","toUpperCase","password","gender","setTimeout","Redirect","console","log","required","minLength","maxLength","type","mapStateToProps","state","session","Session","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { RegisterAction } from \"../../Redux/Actions\";\nimport { useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport \"./Register.css\";\nimport { useAlert } from \"react-alert\";\n\nconst SignUp = (props) => {\n  const alert = useAlert();\n  let history = useHistory();\n  const { handleSubmit, register, errors } = useForm();\n  const onSubmit = (data) => {\n    const userData = {\n      username: data.username.toUpperCase(),\n      password: data.password,\n      gender: data.gender,\n    };\n    props.register(userData);\n    setTimeout(Redirect(), 5000);\n  };\n\n  function Redirect() {\n    console.log(\"hi\");\n  }\n  return (\n    <div className=\"register\">\n      <div className=\"register-form\">\n        <h3 className=\"title\">Register</h3>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <input\n            id=\"username\"\n            name=\"username\"\n            placeholder=\"Type your username\"\n            ref={register({ required: true, minLength: 3, maxLength: 10 })}\n          />\n          {errors.username && errors.username.type === \"required\" && (\n            <p className=\"error-before-submit\">This is required</p>\n          )}\n          {errors.username && errors.username.type === \"minLength\" && (\n            <p className=\"error-before-submit\">Minimum length is 3</p>\n          )}\n          {errors.username && errors.username.type === \"maxLength\" && (\n            <p className=\"error-before-submit\">Maximum length is 10</p>\n          )}\n          <input\n            id=\"password\"\n            name=\"password\"\n            placeholder=\"Type your password\"\n            type=\"password\"\n            ref={register({ required: true })}\n          />\n          {errors.password && errors.password.type === \"required\" && (\n            <p className=\"error-before-submit\">This is required</p>\n          )}\n\n          <label className=\"label-gender\" htmlFor=\"gender\">\n            Gender\n          </label>\n          <input name=\"gender\" ref={register({ required: true })} list=\"list\" />\n          {errors.gender && (\n            <p className=\"error-before-submit\">This is required</p>\n          )}\n          <datalist id=\"list\">\n            <option value=\"Male\" />\n            <option value=\"Female\" />\n          </datalist>\n          <input\n            type=\"submit\"\n            className=\"btn\"\n            ref={register({ required: true })}\n          />\n          <a href=\"/login\" className=\"login-link\">\n            Already have an account\n          </a>\n        </form>\n      </div>\n    </div>\n  );\n};\nconst mapStateToProps = (state) => ({\n  session: state.Session,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  register: (userData) => dispatch(RegisterAction(userData)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n"]},"metadata":{},"sourceType":"module"}