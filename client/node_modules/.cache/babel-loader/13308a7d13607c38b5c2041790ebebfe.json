{"ast":null,"code":"var _jsxFileName = \"/Users/hazem/Desktop/Web-Development/GuestBook/frontend/src/components/Login/Login.js\";\nimport React from \"react\";\nimport { LoginAction } from \"../../Redux/Actions\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nconst Login = props => {\n  let history = useHistory();\n  const {\n    handleSubmit,\n    register,\n    errors\n  } = useForm();\n\n  const onSubmit = data => {\n    const userData = {\n      username: data.username,\n      password: data.password\n    };\n    props.login(userData);\n    setTimeout(2000, Redirect());\n  };\n\n  const Redirect = () => {\n    if (props.session.user) {\n      console.log(props.session);\n      sessionStorage.setItem(\"storedSession\", props.session.user.username);\n      history.push(\"/dashboard\");\n    } else {\n      console.log(props.session.error);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"Sign In\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter your username\",\n    name: \"username\",\n    id: \"username\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }), errors.username && errors.username.type === \"required\" && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error-before-submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \"This is required\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"password\",\n    placeholder: \"Enter your password\",\n    name: \"password\",\n    type: \"password\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }), errors.password && errors.password.type === \"required\" && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error-before-submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"This is required\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \" Create an account \"))));\n};\n\nconst mapStateToProps = state => ({\n  session: state.Session\n});\n\nconst mapDispatchToProps = dispatch => ({\n  login: user => dispatch(LoginAction(user))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/Users/hazem/Desktop/Web-Development/GuestBook/frontend/src/components/Login/Login.js"],"names":["React","LoginAction","useForm","useHistory","connect","Login","props","history","handleSubmit","register","errors","onSubmit","data","userData","username","password","login","setTimeout","Redirect","session","user","console","log","sessionStorage","setItem","push","error","required","type","mapStateToProps","state","Session","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { LoginAction } from \"../../Redux/Actions\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { connect } from \"react-redux\";\nconst Login = (props) => {\n  let history = useHistory();\n\n  const { handleSubmit, register, errors } = useForm();\n\n  const onSubmit = (data) => {\n    const userData = {\n      username: data.username,\n      password: data.password,\n    };\n    props.login(userData);\n    setTimeout(2000, Redirect());\n  };\n  const Redirect = () => {\n    if (props.session.user) {\n      console.log(props.session);\n      sessionStorage.setItem(\"storedSession\", props.session.user.username);\n      history.push(\"/dashboard\");\n    } else {\n      console.log(props.session.error);\n    }\n  };\n  return (\n    <div className=\"login\">\n      <div className=\"login-form\">\n        <h3 className=\"title\">Sign In</h3>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <input\n            type=\"text\"\n            placeholder=\"Enter your username\"\n            name=\"username\"\n            id=\"username\"\n            ref={register({ required: true })}\n          />\n          {errors.username && errors.username.type === \"required\" && (\n            <p className=\"error-before-submit\">This is required</p>\n          )}\n          <input\n            id=\"password\"\n            placeholder=\"Enter your password\"\n            name=\"password\"\n            type=\"password\"\n            ref={register({ required: true })}\n          />\n          {errors.password && errors.password.type === \"required\" && (\n            <p className=\"error-before-submit\">This is required</p>\n          )}\n          <input type=\"submit\" ref={register({ required: true })} />\n          <a> Create an account </a>\n        </form>\n      </div>\n    </div>\n  );\n};\nconst mapStateToProps = (state) => ({\n  session: state.Session,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  login: (user) => dispatch(LoginAction(user)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}