{"version":3,"sources":["components/Home.js","components/Login/Login.js","Redux/Actions.js","Redux/ActionTypes.js","components/Register/Register.js","components/Dashboard/Dashboard.js","components/Chats/Chats.js","components/Navigation/Navigation.js","App.js","Redux/Reducer.js","Redux/Store.js","index.js"],"names":["Home","props","storedSession","sessionStorage","getItem","console","log","history","push","className","href","connect","state","session","Session","dispatch","login","user","Axios","post","username","password","headers","withCredentials","crossdomain","then","res","type","payload","data","LoginAction","useEffect","Redirect","useHistory","alert","useAlert","useForm","handleSubmit","register","errors","setItem","error","show","style","size","onSubmit","userData","toUpperCase","placeholder","name","id","ref","required","gender","catch","e","minLength","maxLength","htmlFor","list","value","useState","friend","setFriend","friends","setFriends","get","onClick","clear","map","key","src","alt","onChange","event","target","checkUser","socket","io","message","setMessage","conversation","setConversation","match","params","location","pathname","icon","faSignOutAlt","faAngleLeft","sender","dateCreated","rows","messageData","document","getElementById","on","append","addMessages","faPaperPlane","Navigation","exact","path","component","Login","SignUp","Dashboard","Chat","App","initialState","rootReducer","action","store","createStore","applyMiddleware","thunk","options","position","positions","BOTTOM_CENTER","timeout","offset","transition","transitions","FADE","ReactDOM","render","template","AlertTemplate"],"mappings":"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","file":"static/js/main.42a15d6f.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Home.css\";\nconst Home = (props) => {\n  let storedSession = sessionStorage.getItem(\"storedSession\");\n  console.log(storedSession);\n  if (storedSession) {\n    props.history.push(\"/dashboard\");\n  }\n  return (\n    <div className=\"home\">\n      <h3>Guestbook</h3>\n      <p>Contact and Chat with your friends with the best live chat app </p>\n      <p> &lt; / &gt;</p>\n      <div className=\"buttons\">\n        <a href=\"/login\">\n          <button>Login</button>\n        </a>\n        <a href=\"/register\">\n          <button>Register</button>\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect } from \"react\";\nimport { LoginAction } from \"../../Redux/Actions\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./Login.css\";\nimport { connect } from \"react-redux\";\nimport { useAlert } from \"react-alert\";\n\nconst Login = (props) => {\n  useEffect(() => {\n    Redirect();\n  }, [props.session]);\n  let history = useHistory();\n  const alert = useAlert();\n\n  const { handleSubmit, register, errors } = useForm();\n\n  const onSubmit = (data) => {\n    const userData = {\n      username: data.username.toUpperCase(),\n      password: data.password,\n    };\n    props.login(userData);\n  };\n  const Redirect = () => {\n    if (props.session.user) {\n      console.log(props.session);\n      sessionStorage.setItem(\"storedSession\", props.session.user.username);\n      history.push(\"/dashboard\");\n    } else if (props.session.error) {\n      alert.show(<div style={{ size: \"10px\" }}>{props.session.error}</div>);\n    }\n  };\n  return (\n    <div className=\"login\">\n      <div className=\"login-form\">\n        <h3 className=\"title\">Sign In</h3>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <input\n            type=\"text\"\n            placeholder=\"Enter your username\"\n            name=\"username\"\n            id=\"username\"\n            ref={register({ required: true })}\n          />\n          {errors.username && errors.username.type === \"required\" && (\n            <p className=\"error-before-submit\">This is required</p>\n          )}\n          <input\n            id=\"password\"\n            placeholder=\"Enter your password\"\n            name=\"password\"\n            type=\"password\"\n            ref={register({ required: true })}\n          />\n          {errors.password && errors.password.type === \"required\" && (\n            <p className=\"error-before-submit\">This is required</p>\n          )}\n          <input\n            className=\"btn\"\n            type=\"submit\"\n            ref={register({ required: true })}\n          />\n          <a href=\"/register\" className=\"register-link\">\n            Create an account\n          </a>\n        </form>\n      </div>\n    </div>\n  );\n};\nconst mapStateToProps = (state) => ({\n  session: state.Session,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  login: (user) => dispatch(LoginAction(user)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import Axios from \"axios\";\nimport { Register, Login } from \"./ActionTypes\";\n\nexport function RegisterAction(user) {\n  return (dispatch) => {\n    Axios.post(\n      \"/api/register\",\n      {\n        username: user.username,\n        password: user.password,\n        gender: user.gender,\n      },\n      {\n        withCredentials: true,\n        crossdomain: true,\n      }\n    )\n      .then((res) => {\n        dispatch({\n          type: Register,\n          payload: res.data,\n        });\n      })\n      .catch((e) => {\n        console.log(\"Cant Register \", e);\n      });\n  };\n}\nexport function LoginAction(user) {\n  return (dispatch) => {\n    Axios.post(\n      \"/api/login\",\n      {\n        username: user.username,\n        password: user.password,\n      },\n      {\n        headers: { \"Access-Control-Allow-Origin\": \"*\" },\n        withCredentials: true,\n        crossdomain: true,\n      }\n    ).then((res) => {\n      dispatch({\n        type: Login,\n        payload: res.data,\n      });\n    });\n  };\n}\n","export const Login = \"Login\";\nexport const Register = \"Register\";\nexport const Logout = \"Logout\";\nexport const Authenticated = \"Authenticated\";\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { RegisterAction } from \"../../Redux/Actions\";\nimport { useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport \"./Register.css\";\nimport { useAlert } from \"react-alert\";\n\nconst SignUp = (props) => {\n  useEffect(() => {\n    Redirect();\n  }, [props.session]);\n  const alert = useAlert();\n  let history = useHistory();\n  const { handleSubmit, register, errors } = useForm();\n  const onSubmit = (data) => {\n    const userData = {\n      username: data.username.toUpperCase(),\n      password: data.password,\n      gender: data.gender,\n    };\n    props.register(userData);\n  };\n\n  const Redirect = () => {\n    if (props.session.user) {\n      sessionStorage.setItem(\"storedSession\", props.session.user.username);\n      history.push(\"/dashboard\");\n    } else if (props.session.error) {\n      alert.show(<div style={{ size: \"10px\" }}>{props.session.error}</div>);\n    }\n  };\n  return (\n    <div className=\"register\">\n      <div className=\"register-form\">\n        <h3 className=\"title\">Register</h3>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <input\n            id=\"username\"\n            name=\"username\"\n            placeholder=\"Type your username\"\n            ref={register({ required: true, minLength: 3, maxLength: 10 })}\n          />\n          {errors.username && errors.username.type === \"required\" && (\n            <p className=\"error-before-submit\">This is required</p>\n          )}\n          {errors.username && errors.username.type === \"minLength\" && (\n            <p className=\"error-before-submit\">Minimum length is 3</p>\n          )}\n          {errors.username && errors.username.type === \"maxLength\" && (\n            <p className=\"error-before-submit\">Maximum length is 10</p>\n          )}\n          <input\n            id=\"password\"\n            name=\"password\"\n            placeholder=\"Type your password\"\n            type=\"password\"\n            ref={register({ required: true })}\n          />\n          {errors.password && errors.password.type === \"required\" && (\n            <p className=\"error-before-submit\">This is required</p>\n          )}\n\n          <label className=\"label-gender\" htmlFor=\"gender\">\n            Gender\n          </label>\n          <input name=\"gender\" ref={register({ required: true })} list=\"list\" />\n          {errors.gender && (\n            <p className=\"error-before-submit\">This is required</p>\n          )}\n          <datalist id=\"list\">\n            <option value=\"Male\" />\n            <option value=\"Female\" />\n          </datalist>\n          <input\n            type=\"submit\"\n            className=\"btn\"\n            ref={register({ required: true })}\n          />\n          <a href=\"/login\" className=\"login-link\">\n            Already have an account\n          </a>\n        </form>\n      </div>\n    </div>\n  );\n};\nconst mapStateToProps = (state) => ({\n  session: state.Session,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  register: (userData) => dispatch(RegisterAction(userData)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport Axios from \"axios\";\nimport \"./Dashboard.css\";\n\nconst Dashboard = (props) => {\n  const [friend, setFriend] = useState(\"\");\n  const [friends, setFriends] = useState([]);\n\n  let storedSession = sessionStorage.getItem(\"storedSession\");\n  let user = storedSession;\n\n  console.log(storedSession);\n  if (!storedSession) {\n    props.history.push(\"/\");\n  }\n  function logout() {\n    sessionStorage.clear();\n  }\n  useEffect(() => {\n    Axios.get(\"/friends\", {\n      username: user,\n    })\n      .then((res) => {\n        setFriends(res.data);\n      })\n      .catch((e) => {\n        console.log(\"Cant fetch friends \", e);\n      });\n  });\n  const checkUser = (user) => {\n    Axios.post(\n      \"/api/check\",\n      {\n        username: user.toUpperCase(),\n      },\n      {\n        withCredentials: true,\n        crossdomain: true,\n      }\n    )\n      .then((user) => {\n        if (user.data.error) {\n          alert(user.data.error);\n        } else {\n          {\n            props.history.push(`/Chat/${user.data}`);\n          }\n          console.log(user.data);\n        }\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n  return (\n    <div className=\"dash\">\n      <div\n        className=\"logout\"\n        onClick={(e) => {\n          logout();\n        }}\n      >\n        <h4>Sign Out</h4>\n      </div>\n      <div className=\"friends-dashboard-container\">\n        <p className=\"chatsp\">Chats</p>\n        {friends !== \"No Friends\" ? (\n          friends.map((friend, key) => {\n            return (\n              <div\n                id={key}\n                className=\"dashboard-friend-box \"\n                onClick={(e) => {\n                  props.history.push(`/Chat/${friend}`);\n                }}\n              >\n                <img\n                  className=\"friendAvatar\"\n                  src=\"https://www.pngitem.com/pimgs/m/78-786293_1240-x-1240-0-avatar-profile-icon-png.png\"\n                  alt=\"Avatar\"\n                ></img>\n                <div className=\"dashboard-text\">\n                  <p className=\"dashboard-friendName\">{friend}</p>\n                </div>\n              </div>\n            );\n          })\n        ) : (\n          <p className=\"noFriends\">You have no friends</p>\n        )}\n      </div>\n      <div className=\"welcome-message\">\n        <h3>Welcome {storedSession}</h3>\n        <h3>Live Chat Now With Your Friends</h3>\n      </div>\n      <div className=\"new-user\">\n        <input\n          className=\"friend-name\"\n          onChange={(event) => setFriend(event.target.value)}\n          type=\"text\"\n          placeholder=\"type your friend's username\"\n        ></input>\n\n        <button\n          className=\"chat-button\"\n          onClick={(e) => {\n            checkUser(friend);\n          }}\n        >\n          Chat\n        </button>\n      </div>\n    </div>\n  );\n};\nconst mapStateToProps = (state) => ({\n  user: state.Session,\n});\n\nexport default connect(mapStateToProps)(Dashboard);\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport Axios from \"axios\";\nimport io from \"socket.io-client\";\nimport \"./Chats.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPaperPlane,\n  faAngleLeft,\n  faSignOutAlt,\n} from \"@fortawesome/fontawesome-free-solid\";\nlet socket = io();\nconst Chat = (props) => {\n  const [message, setMessage] = useState(\"\");\n  const [conversation, setConversation] = useState([]);\n  let friend = props.match.params.friend;\n  let storedSession = sessionStorage.getItem(\"storedSession\");\n  let user = storedSession;\n  function logout() {\n    sessionStorage.clear();\n  }\n  if (!storedSession) {\n    props.history.push(\"/\");\n  }\n  useEffect(() => {\n    Axios.post(\"/chat\", {\n      username: user,\n      friend: friend,\n    })\n      .then((res) => {\n        setConversation(res.data);\n      })\n      .catch((e) => {\n        console.log(\"Cant fetch Chat \", e);\n      });\n  }, [props.history.location.pathname, conversation]);\n  const sendMessage = (messageData) => {\n    document.getElementById(\"message-to-send\").value = \"\";\n    socket.on(\"newmessage\", function (data) {\n      addMessages(data);\n      function addMessages(message) {\n        document.getElementById(\"messages\").append(<p>{message.message}</p>);\n      }\n    });\n    Axios.post(\n      \"/messages\",\n      {\n        username: messageData.user,\n        friend: messageData.friend,\n        message: messageData.message,\n      },\n      {\n        withCredentials: true,\n        crossdomain: true,\n      }\n    )\n      .then((res) => {})\n      .catch((e) => {\n        console.log(\"Cant Register \", e);\n      });\n  };\n\n  return (\n    <div className=\"\">\n      <div className=\"settings\">\n        <div\n          className=\"logout\"\n          onClick={(e) => {\n            logout();\n          }}\n        >\n          <FontAwesomeIcon\n            className=\"logout-button\"\n            icon={faSignOutAlt}\n          ></FontAwesomeIcon>{\" \"}\n        </div>\n        <div className=\"Chats\">\n          <a href=\"/dashboard\">\n            <FontAwesomeIcon\n              className=\"back\"\n              icon={faAngleLeft}\n            ></FontAwesomeIcon>\n          </a>\n        </div>\n      </div>\n      <div className=\"chatWindow\">\n        <div className=\"chats-container\">\n          <div className=\"chat-window\">\n            <div className=\"chat-header\">\n              <img\n                src=\"https://www.pngitem.com/pimgs/m/78-786293_1240-x-1240-0-avatar-profile-icon-png.png\"\n                alt=\"avatar\"\n              />\n              <div className=\"friend-name\">{friend}</div>\n            </div>\n\n            <div className=\"chat-history\">\n              <ul className=\"chat-ul-history\">\n                {conversation.map((message, key) => {\n                  return (\n                    <li id=\"messages\" className=\"message-list\" key={key}>\n                      {message.sender === user ? (\n                        <>\n                          <div className=\"message-data align-right\">\n                            <span className=\"message-data-time\">\n                              {message.dateCreated}\n                            </span>\n                            <span className=\"message-data-name\">\n                              {message.sender}\n                            </span>\n                          </div>\n                          <div className=\"message other-message float-right\">\n                            {message.message}\n                          </div>\n                        </>\n                      ) : (\n                        <>\n                          <div className=\"message-data\">\n                            <span className=\"message-data-name\">\n                              <i className=\"fa fa-circle online\"></i>\n                              {message.sender}\n                            </span>\n                            <span className=\"message-data-time\">\n                              {message.dateCreated}\n                            </span>\n                          </div>\n                          <div className=\"message my-message\">\n                            {message.message}\n                          </div>\n                        </>\n                      )}\n                    </li>\n                  );\n                })}\n              </ul>\n            </div>\n\n            <div className=\"send-message\">\n              <textarea\n                className=\"message-to-send\"\n                id=\"message-to-send\"\n                placeholder=\"Type your message\"\n                rows=\"3\"\n                onChange={(e) => {\n                  setMessage(e.target.value);\n                }}\n              ></textarea>\n              <FontAwesomeIcon\n                onClick={() => sendMessage({ user, friend, message })}\n                className=\"send-button\"\n                icon={faPaperPlane}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nconst mapStateToProps = (state) => ({});\nconst mapDispatchToProps = (dispatch) => ({});\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"../Home\";\nimport Login from \"../Login/Login\";\nimport SignUp from \"../Register/Register\";\nimport Dashboard from \"../Dashboard/Dashboard\";\nimport Chat from \"../Chats/Chats\";\nconst Navigation = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Home}></Route>\n        <Route exact path=\"/login\" component={Login}></Route>\n        <Route exact path=\"/register\" component={SignUp}></Route>\n        <Route exact path=\"/dashboard\" component={Dashboard}></Route>\n        <Route exact path=\"/Chat/:friend\" component={Chat}></Route>\n      </Switch>\n    </Router>\n  );\n};\nexport default Navigation;\n","import React from \"react\";\nimport Navigation from \"../src/components/Navigation/Navigation\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navigation />\n    </div>\n  );\n}\n\nexport default App;\n","import { Register, Login } from \"./ActionTypes\";\n\nconst initialState = {\n  Session: {},\n};\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case Register:\n      return {\n        ...state,\n        Session: action.payload,\n      };\n    case Login:\n      return {\n        ...state,\n        Session: action.payload,\n      };\n    default:\n      return state;\n  }\n};\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./Reducer\";\nimport thunk from \"redux-thunk\";\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"../src/Redux/Store\";\nimport { transitions, positions, Provider as AlertProvider } from \"react-alert\";\nimport AlertTemplate from \"react-alert-template-basic\";\n\nimport \"./styles.css\";\n\nconst options = {\n  position: positions.BOTTOM_CENTER,\n  timeout: 2000,\n  offset: \"10px\",\n  transition: transitions.FADE,\n};\n\nReactDOM.render(\n  <Provider store={store}>\n    <AlertProvider template={AlertTemplate} {...options}>\n      <App />\n    </AlertProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}